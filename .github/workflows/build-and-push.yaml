name: Build and Push Multi-Arch Image to GHCR

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DOCKERHUB_REGISTRY: docker.io
  DOCKERHUB_CACHE_REPO: ${{ secrets.DOCKERHUB_USERNAME }}/cache

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Set cache date
        id: cache-date
        run: |
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "cache_date=${{ steps.date.outputs.date }}" >> $GITHUB_OUTPUT
          else
            echo "cache_date=${{ github.sha }}" >> $GITHUB_OUTPUT
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub for cache
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKERHUB_REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix=
            type=ref,event=tag
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

      - name: Build image for scanning
        id: build-for-scan
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: false
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: |
            type=registry,ref=${{ env.DOCKERHUB_CACHE_REPO }}:cache-amd64-${{ steps.cache-date.outputs.cache_date }}
            type=registry,ref=${{ env.DOCKERHUB_CACHE_REPO }}:cache-arm64-${{ steps.cache-date.outputs.cache_date }}
          outputs: type=docker

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          format: table
          exit-code: '1'
          severity: CRITICAL,HIGH
          cache-dir: ${{ github.workspace }}/.cache/trivy

      - name: Push cache to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.DOCKERHUB_CACHE_REPO }}:cache-amd64-${{ steps.cache-date.outputs.cache_date }}
            ${{ env.DOCKERHUB_CACHE_REPO }}:cache-arm64-${{ steps.cache-date.outputs.cache_date }}
          cache-from: |
            type=registry,ref=${{ env.DOCKERHUB_CACHE_REPO }}:cache-amd64-${{ steps.cache-date.outputs.cache_date }}
            type=registry,ref=${{ env.DOCKERHUB_CACHE_REPO }}:cache-arm64-${{ steps.cache-date.outputs.cache_date }}
          cache-to: |
            type=registry,ref=${{ env.DOCKERHUB_CACHE_REPO }}:cache-amd64-${{ steps.cache-date.outputs.cache_date }}
            type=registry,ref=${{ env.DOCKERHUB_CACHE_REPO }}:cache-arm64-${{ steps.cache-date.outputs.cache_date }},mode=max

      - name: Push final image to GHCR
        uses: docker/build-push-action@v5
        if: github.event_name != 'pull_request'
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: |
            type=registry,ref=${{ env.DOCKERHUB_CACHE_REPO }}:cache-amd64-${{ steps.cache-date.outputs.cache_date }}
            type=registry,ref=${{ env.DOCKERHUB_CACHE_REPO }}:cache-arm64-${{ steps.cache-date.outputs.cache_date }}
          cache-to: |
            type=registry,ref=${{ env.DOCKERHUB_CACHE_REPO }}:cache-amd64-${{ steps.cache-date.outputs.cache_date }}
            type=registry,ref=${{ env.DOCKERHUB_CACHE_REPO }}:cache-arm64-${{ steps.cache-date.outputs.cache_date }},mode=max